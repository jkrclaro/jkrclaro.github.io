{"version":3,"sources":["imgs/gravitywebinar.png","imgs/megaphonely.png","components/Header.jsx","components/Home.jsx","components/Portfolio.jsx","components/PortfolioGravityWebinar.jsx","components/PortfolioMegaphonely.jsx","components/Body.jsx","App.js","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","Header","react_default","a","createElement","className","Link","to","href","React","Component","Home","target","rel","grayBorderStyle","border","Portfolio","src","gravitywebinar","alt","style","megaphonely","PortfolioGravityWebinar","PortfolioMegaphonely","Body","Route","exact","path","component","App","HashRouter","components_Header","components_Body","Boolean","window","location","hostname","match","WebFont","load","google","families","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.1ece6bc4.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/gravitywebinar.8c86413c.png\";","module.exports = __webpack_public_path__ + \"static/media/megaphonely.6114551d.png\";","import React from 'react';\nimport { Link } from 'react-router-dom';\n\nclass Header extends React.Component {\n\n    render() {\n        return (\n            <div className='container mt-3 mb-3'>\n                <ul className=\"nav justify-content-center\">\n                    <li className=\"nav-item\">\n                        <Link className='nav-link' to='/'>About</Link>\n                    </li>\n                    <li className=\"nav-item\">\n                        <Link className='nav-link' to='/portfolio'>Portfolio</Link>\n                    </li>\n                    <li className=\"nav-item\">\n                        <a className='nav-link' href='mailto:support@jkrclaro.com?subject='>Contact</a>\n                    </li>\n                </ul>\n            </div>\n        )\n    }\n}\n\nexport default Header;","import React from 'react';\n\nclass Home extends React.Component {\n\n    render() {\n        return (\n            <div className='row'>\n                <div className='col-sm-2'></div>\n                <div className='col-sm-8'>\n                    <h1>About Me</h1>\n                    <p>\n                        My name is John Claro, I'm 24 years old and \n                        I'm a passionate developer interested in web development, \n                        software engineering and tons of other stuff. \n                    </p>\n                    <p>\n                        I graduated with Applied Computing in Waterford Institute of Technology from 2012-2016.\n                    </p>\n                    <p>\n                        I currently live in Dublin, Ireland.\n                    </p>\n                    <p>\n                        If you want to contact me, you can reach me via one of the following communication channels:\n                    </p>\n                    <ul>\n                        <li>via <a href='mailto:jkrclaro@gmail.com'>email</a></li>\n                        <li>send me a message on <a href='https://www.github.com/jkrclaro' target=\"_blank\" rel=\"noopener noreferrer\">github</a></li>\n                        <li>reach out to me on <a href='https://www.twitter.com/jkrclaro' target=\"_blank\" rel=\"noopener noreferrer\">twitter</a></li>\n                        <li>connect with me on <a href='https://www.linkedin.com/in/jkrclaro' target=\"_blank\" rel=\"noopener noreferrer\">linkedin</a></li>\n                    </ul>\n                </div>\n                <div className='col-sm-2'></div>\n            </div>\n        )\n    }\n}\n\nexport default Home;","import React from 'react';\nimport { Link } from 'react-router-dom';\n\nimport gravitywebinar from '../imgs/gravitywebinar.png';\nimport megaphonely from '../imgs/megaphonely.png';\n\n\nconst grayBorderStyle = {\n    border: '1px solid #222222'\n}\n\n\nclass Portfolio extends React.Component {\n\n    render() {\n        return (\n            <div>\n                <h1>Websites</h1>\n                <div className='row text-center'>\n                    <div className='col-lg-4 mb-3'>\n                        <Link to='/portfolios/gravitywebinar'>\n                            <img src={gravitywebinar} alt='gravitywebinar' className='img-fluid rounded' style={grayBorderStyle}/>\n                        </Link>\n                    </div>\n                    <div className='col-lg-4'>\n                        <Link to='/portfolios/megaphonely'>\n                            <img src={megaphonely} alt='megaphonely' className='img-fluid rounded'/>\n                        </Link>\n                    </div>\n                    <div className='col-lg-4'></div>\n                </div>\n            </div>\n        )\n    }\n}\n\nexport default Portfolio;","import React from 'react';\n\nimport gravitywebinar from '../imgs/gravitywebinar.png';\n\n\nconst grayBorderStyle = {\n    border: '1px solid #222222'\n}\n\n\nclass PortfolioGravityWebinar extends React.Component {\n\n    render() {\n        return (\n            <div className='row'>\n                <div className='col-lg-2'></div>\n                <div className='col-lg-8'>\n                    <img src={gravitywebinar} alt='gravitywebinar' style={grayBorderStyle} className='img-fluid rounded mb-3' />\n                    <p>\n                        <b>Gravity Webinar</b> is a webinar platform for B2B companies\n                        that are in the technology industry. Users are able to conduct\n                        video calls using their webcam and microphone from their laptop to \n                        someone from a different internet network.\n                    </p>\n                    <p>\n                        <b>Technology</b>\n                        <ul>\n                            <li>\n                                <p>\n                                    ReactJS, NodeJS, WebSockets, WebRTC, Flask, Python,\n                                    Javascript, STUN, TURN, Bootstrap, HTML\n                                </p>\n                            </li>\n                        </ul>\n                    </p>\n                </div>\n                <div className='col-lg-2'></div>\n            </div>\n        )\n    }\n}\n\nexport default PortfolioGravityWebinar;","import React from 'react';\n\nimport megaphonely from '../imgs/megaphonely.png';\n\n\nclass PortfolioMegaphonely extends React.Component {\n\n    render() {\n        return (\n            <div className='row'>\n                <div className='col-lg-2'></div>\n                <div className='col-lg-8'>\n                    <img src={megaphonely} alt='megaphonely' className='img-fluid rounded mb-3' />\n                    <p>\n                        <b>Megaphonely</b> was a social media management application \n                        that allowed users to connect their social media accounts and \n                        allow the application to post contents with the consent of the user.\n                        Users were able to instantly or schedule contents to be posted\n                        to various social platforms in one click.\n                    </p>\n                    <p>\n                        <b>Technology</b>\n                        <ul>\n                            <li>\n                                <p>\n                                    Django, HTML, Bootstrap, Javascript, Twitter API, \n                                    LinkedIn API, Facebook API, Python, AWS Lambda, \n                                    AWS Elastic Beanstalk, Stripe API\n                                </p>\n                            </li>\n                        </ul>\n                    </p>\n                </div>\n                <div className='col-lg-2'></div>\n            </div>\n        )\n    }\n}\n\nexport default PortfolioMegaphonely;","import React from 'react';\nimport { Route } from 'react-router-dom';\n\nimport Home from './Home';\nimport Portfolio from './Portfolio';\nimport PortfolioGravityWebinar from './PortfolioGravityWebinar';\nimport PortfolioMegaphonely from './PortfolioMegaphonely';\n\nclass Body extends React.Component {\n\n    render() {\n        return (\n            <div>\n                <Route exact path='/' component={Home} />\n                <Route path='/portfolio' component={Portfolio} />\n                <Route path='/portfolios/gravitywebinar' component={PortfolioGravityWebinar} />\n                <Route path='/portfolios/megaphonely' component={PortfolioMegaphonely} />\n            </div>\n        )\n    }\n}\n\nexport default Body;","import React, { Component } from 'react';\nimport { HashRouter } from 'react-router-dom';\n\nimport Header from './components/Header';\nimport Body from './components/Body';\n\nclass App extends Component {\n\n    render() {\n        return(\n            <HashRouter>\n                <div className='main-body jkrclaro-bg'>\n                    <div className='sub-body'>\n                        <div className='App-header'>\n                            <Header />\n                        </div>\n                        <div className='container'>\n                            <Body />\n                        </div>\n                    </div>\n                </div>\n            </HashRouter>\n        )\n    }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport WebFont from 'webfontloader';\n\nWebFont.load({\n    google: {\n      families: [\n          'Work Sans:300,400,700', 'sans-serif',\n      ]\n    }\n});\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}