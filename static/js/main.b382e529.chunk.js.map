{"version":3,"sources":["components/Header.jsx","components/Home.jsx","components/Portfolio.jsx","components/Body.jsx","App.js","serviceWorker.js","index.js"],"names":["Header","react_default","a","createElement","Link","to","React","Component","textUnderlineStyle","textDecoration","Home","className","href","style","target","Portfolio","Body","Route","exact","path","component","App","HashRouter","components_Header","components_Body","Boolean","window","location","hostname","match","WebFont","load","google","families","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"+PAiBeA,mLAXP,OACIC,EAAAC,EAAAC,cAAA,WACIF,EAAAC,EAAAC,cAAA,UACIF,EAAAC,EAAAC,cAAA,UAAIF,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAMC,GAAG,KAAT,UACJJ,EAAAC,EAAAC,cAAA,UAAIF,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAMC,GAAG,cAAT,uBAPHC,IAAMC,mBCDrBC,EAAqB,CACvBC,eAAgB,aAsCLC,mLAhCP,OACIT,EAAAC,EAAAC,cAAA,OAAKQ,UAAU,OACXV,EAAAC,EAAAC,cAAA,OAAKQ,UAAU,aACfV,EAAAC,EAAAC,cAAA,OAAKQ,UAAU,YACXV,EAAAC,EAAAC,cAAA,sBACAF,EAAAC,EAAAC,cAAA,gKAKAF,EAAAC,EAAAC,cAAA,oGAGAF,EAAAC,EAAAC,cAAA,iDAGAF,EAAAC,EAAAC,cAAA,SACIF,EAAAC,EAAAC,cAAA,yGACAF,EAAAC,EAAAC,cAAA,UACIF,EAAAC,EAAAC,cAAA,UAAIF,EAAAC,EAAAC,cAAA,gBAAOF,EAAAC,EAAAC,cAAA,KAAGS,KAAK,4BAA4BC,MAAOL,GAA3C,WACXP,EAAAC,EAAAC,cAAA,UAAIF,EAAAC,EAAAC,cAAA,iCAAwBF,EAAAC,EAAAC,cAAA,KAAGS,KAAK,kCAAkCC,MAAOL,EAAoBM,OAAO,UAA5E,YAC5Bb,EAAAC,EAAAC,cAAA,UAAIF,EAAAC,EAAAC,cAAA,+BAAsBF,EAAAC,EAAAC,cAAA,KAAGS,KAAK,mCAAmCC,MAAOL,EAAoBM,OAAO,UAA7E,aAC1Bb,EAAAC,EAAAC,cAAA,UAAIF,EAAAC,EAAAC,cAAA,+BAAsBF,EAAAC,EAAAC,cAAA,KAAGS,KAAK,uCAAuCC,MAAOL,EAAoBM,OAAO,UAAjF,iBAItCb,EAAAC,EAAAC,cAAA,OAAKQ,UAAU,qBA7BZL,IAAMC,WCOVQ,mLARP,OACId,EAAAC,EAAAC,cAAA,WACIF,EAAAC,EAAAC,cAAA,iCALQG,IAAMC,WCgBfS,mLATP,OACIf,EAAAC,EAAAC,cAAA,WACIF,EAAAC,EAAAC,cAACc,EAAA,EAAD,CAAOC,OAAK,EAACC,KAAK,IAAIC,UAAWV,IACjCT,EAAAC,EAAAC,cAACc,EAAA,EAAD,CAAOE,KAAK,aAAaC,UAAWL,YANjCT,IAAMC,WCkBVc,mLAfP,OACIpB,EAAAC,EAAAC,cAACmB,EAAA,EAAD,KACIrB,EAAAC,EAAAC,cAAA,OAAKQ,UAAU,yBACXV,EAAAC,EAAAC,cAAA,OAAKQ,UAAU,YACXV,EAAAC,EAAAC,cAACoB,EAAD,MACAtB,EAAAC,EAAAC,cAAA,OAAKQ,UAAU,aACXV,EAAAC,EAAAC,cAACqB,EAAD,iBATVjB,aCMEkB,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,8ECVNC,EAAQC,KAAK,CACTC,OAAQ,CACNC,SAAU,CACN,wBAAyB,iBAKnCC,IAASC,OAAOlC,EAAAC,EAAAC,cAACiC,EAAD,MAASC,SAASC,eAAe,SDiH3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMC,KAAK,SAAAC,GACjCA,EAAaC","file":"static/js/main.b382e529.chunk.js","sourcesContent":["import React from 'react';\nimport { Link } from 'react-router-dom';\n\nclass Header extends React.Component {\n\n    render() {\n        return (\n            <div>\n                <ul>\n                    <li><Link to='/'>About</Link></li>\n                    <li><Link to='/portfolio'>Portfolio</Link></li>\n                </ul>\n            </div>\n        )\n    }\n}\n\nexport default Header;","import React from 'react';\n\nconst textUnderlineStyle = {\n    textDecoration: 'underline'\n}\n\nclass Home extends React.Component {\n\n    render() {\n        return (\n            <div className='row'>\n                <div className='col-sm-2'></div>\n                <div className='col-sm-8'>\n                    <h1>About Me</h1>\n                    <p>\n                        My name is John Claro, I'm 24 years old and \n                        I'm a passionate developer interested in web development, \n                        software engineering and tons of other stuff. \n                    </p>\n                    <p>\n                        I graduated with Applied Computing in Waterford Institute of Technology from 2012-2016.\n                    </p>\n                    <p>\n                        I currently live in Dublin, Ireland.\n                    </p>\n                    <p>\n                        <p>If you want to contact me, you can reach me via one of the following communication channels:</p>\n                        <ul>\n                            <li><p>via <a href='mailto:jkrclaro@gmail.com' style={textUnderlineStyle}>email</a></p></li>\n                            <li><p>send me a message on <a href='https://www.github.com/jkrclaro' style={textUnderlineStyle} target=\"_blank\">github</a></p></li>\n                            <li><p>reach out to me on <a href='https://www.twitter.com/jkrclaro' style={textUnderlineStyle} target=\"_blank\">twitter</a></p></li>\n                            <li><p>connect with me on <a href='https://www.linkedin.com/in/jkrclaro' style={textUnderlineStyle} target=\"_blank\">linkedin</a></p></li>\n                        </ul>\n                    </p>\n                </div>\n                <div className='col-sm-2'></div>\n            </div>\n        )\n    }\n}\n\nexport default Home;","import React from 'react';\n\nclass Portfolio extends React.Component {\n\n    render() {\n        return (\n            <div>\n                <p>My portfolio</p>\n            </div>\n        )\n    }\n}\n\nexport default Portfolio;","import React from 'react';\nimport { Route } from 'react-router-dom';\n\nimport Home from './Home';\nimport Portfolio from './Portfolio';\n\nclass Body extends React.Component {\n\n    render() {\n        return (\n            <div>\n                <Route exact path='/' component={Home} />\n                <Route path='/portfolio' component={Portfolio} />\n            </div>\n        )\n    }\n}\n\nexport default Body;","import React, { Component } from 'react';\nimport { HashRouter } from 'react-router-dom';\n\nimport Header from './components/Header';\nimport Body from './components/Body';\n\nclass App extends Component {\n\n    render() {\n        return(\n            <HashRouter>\n                <div className='main-body jkrclaro-bg'>\n                    <div className='sub-body'>\n                        <Header />\n                        <div className='container'>\n                            <Body />\n                        </div>\n                    </div>\n                </div>\n            </HashRouter>\n        )\n    }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport WebFont from 'webfontloader';\n\nWebFont.load({\n    google: {\n      families: [\n          'Work Sans:300,400,700', 'sans-serif',\n      ]\n    }\n});\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}