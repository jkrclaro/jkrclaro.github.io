{"version":3,"sources":["components/Header.jsx","components/Home.jsx","components/Library.jsx","components/Blog.jsx","components/Portfolio.jsx","components/ErrorPage.jsx","components/Body.jsx","App.js","serviceWorker.js","index.js"],"names":["Header","react_default","a","createElement","href","React","Component","Home","Library","Blog","Portfolio","ErrorPage","Body","Switch","Route","path","component","exact","App","BrowserRouter","components_Header","components_Body","Boolean","window","location","hostname","match","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"iPAkBeA,mLAbP,OACIC,EAAAC,EAAAC,cAAA,WACIF,EAAAC,EAAAC,cAAA,UACIF,EAAAC,EAAAC,cAAA,UAAIF,EAAAC,EAAAC,cAAA,KAAGC,KAAK,KAAR,UACJH,EAAAC,EAAAC,cAAA,UAAIF,EAAAC,EAAAC,cAAA,KAAGC,KAAK,aAAR,cACJH,EAAAC,EAAAC,cAAA,UAAIF,EAAAC,EAAAC,cAAA,KAAGC,KAAK,QAAR,SACJH,EAAAC,EAAAC,cAAA,UAAIF,EAAAC,EAAAC,cAAA,KAAGC,KAAK,WAAR,qBATHC,IAAMC,2BCwBZC,mLArBP,OACIN,EAAAC,EAAAC,cAAA,WACIF,EAAAC,EAAAC,cAAA,kJAKAF,EAAAC,EAAAC,cAAA,sCAC8BF,EAAAC,EAAAC,cAAA,KAAGC,KAAK,6BAAR,UAD9B,kDAGAH,EAAAC,EAAAC,cAAA,yGACAF,EAAAC,EAAAC,cAAA,UACIF,EAAAC,EAAAC,cAAA,iBAAQF,EAAAC,EAAAC,cAAA,KAAGC,KAAK,6BAAR,UACRH,EAAAC,EAAAC,cAAA,kCAAyBF,EAAAC,EAAAC,cAAA,KAAGC,KAAK,mCAAR,WACzBH,EAAAC,EAAAC,cAAA,gCAAuBF,EAAAC,EAAAC,cAAA,KAAGC,KAAK,oCAAR,qBAjBxBC,IAAMC,WCWVE,mLARP,OACIP,EAAAC,EAAAC,cAAA,WACIF,EAAAC,EAAAC,cAAA,6BALME,IAAMC,WCWbG,mLARP,OACIR,EAAAC,EAAAC,cAAA,WACIF,EAAAC,EAAAC,cAAA,4BALGE,IAAMC,WCWVI,mLARP,OACIT,EAAAC,EAAAC,cAAA,WACIF,EAAAC,EAAAC,cAAA,iCALQE,IAAMC,WCYfK,mLARP,OACIV,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAA,sCAA6BF,EAAAC,EAAAC,cAAA,KAAGC,KAAK,KAAR,oBALnBC,IAAMC,WCqBfM,mLAZP,OACIX,EAAAC,EAAAC,cAACU,EAAA,EAAD,KACIZ,EAAAC,EAAAC,cAACW,EAAA,EAAD,CAAOC,KAAK,IAAIC,UAAWT,EAAMU,OAAK,IACtChB,EAAAC,EAAAC,cAACW,EAAA,EAAD,CAAOC,KAAK,QAAQC,UAAWP,IAC/BR,EAAAC,EAAAC,cAACW,EAAA,EAAD,CAAOC,KAAK,aAAaC,UAAWN,IACpCT,EAAAC,EAAAC,cAACW,EAAA,EAAD,CAAOC,KAAK,WAAWC,UAAWR,IAClCP,EAAAC,EAAAC,cAACW,EAAA,EAAD,CAAOE,UAAWL,YATfN,IAAMC,WCUVY,mLAXX,OACEjB,EAAAC,EAAAC,cAACgB,EAAA,EAAD,KACElB,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAACiB,EAAD,MACAnB,EAAAC,EAAAC,cAACkB,EAAD,eANQf,aCMEgB,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCZNC,IAASC,OAAO3B,EAAAC,EAAAC,cAAC0B,EAAD,MAASC,SAASC,eAAe,SD2H3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMC,KAAK,SAAAC,GACjCA,EAAaC","file":"static/js/main.13801e81.chunk.js","sourcesContent":["import React from 'react';\n\nclass Header extends React.Component {\n\n    render() {\n        return (\n            <div>\n                <ul>\n                    <li><a href='/'>About</a></li>\n                    <li><a href='portfolio'>Portfolio</a></li>\n                    <li><a href='blog'>Blog</a></li>\n                    <li><a href='library'>Library</a></li>\n                </ul>\n            </div>\n        )\n    }\n}\n\nexport default Header;","import React from 'react';\n\nclass Home extends React.Component {\n\n    render() {\n        return (\n            <div>\n                <p>\n                    My name is John Claro and I'm a passionate developer \n                    interested in web development, real-time communications\n                    and tons of other stuff. \n                </p>\n                <p>\n                    I am currently working on <a href='https://www.summonapp.com'>Summon</a> as a solo-founder, from programming to sales.\n                </p>\n                <p>If you want to contact me, you can reach me via one of the following communication channels:</p>\n                <ul>\n                    <li>via <a href='mailto:jkrclaro@gmail.com'>email</a></li>\n                    <li>send me a message on <a href='https://www.github.com/jkrclaro'>github</a></li>\n                    <li>reach out to me on <a href='https://www.twitter.com/jkrclaro'>twitter</a></li>\n                </ul>\n            </div>\n        )\n    }\n}\n\nexport default Home;","import React from 'react';\n\nclass Library extends React.Component {\n\n    render() {\n        return (\n            <div>\n                <p>My books</p>\n            </div>\n        )\n    }\n}\n\nexport default Library;","import React from 'react';\n\nclass Blog extends React.Component {\n\n    render() {\n        return (\n            <div>\n                <p>My blog</p>\n            </div>\n        )\n    }\n}\n\nexport default Blog;","import React from 'react';\n\nclass Portfolio extends React.Component {\n\n    render() {\n        return (\n            <div>\n                <p>My portfolio</p>\n            </div>\n        )\n    }\n}\n\nexport default Portfolio;","import React from 'react';\n\n\nclass ErrorPage extends React.Component {\n\n    render() {\n        return (\n            <div>\n              <p>That page does not exist. <a href='/'>Go back</a></p>\n            </div>\n        );\n    };\n};\n\nexport default ErrorPage;\n","import React from 'react';\nimport { Route, Switch } from 'react-router-dom';\n\nimport Home from './Home';\nimport Library from './Library';\nimport Blog from './Blog';\nimport Portfolio from './Portfolio';\nimport ErrorPage from './ErrorPage';\n\nclass Body extends React.Component {\n\n    render() {\n        return (\n            <Switch>\n                <Route path='/' component={Home} exact />\n                <Route path='/blog' component={Blog} />\n                <Route path='/portfolio' component={Portfolio} />\n                <Route path='/library' component={Library} />\n                <Route component={ErrorPage} />\n            </Switch>\n        )\n    }\n}\n\nexport default Body;","import React, { Component } from 'react';\nimport { BrowserRouter } from 'react-router-dom';\n\nimport Header from './components/Header';\nimport Body from './components/Body';\n\nclass App extends Component {\n  render() {\n    return (\n      <BrowserRouter>\n        <div>\n          <Header/>\n          <Body/>\n        </div>\n      </BrowserRouter>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}